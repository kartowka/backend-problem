{
    "openapi": "3.0.3",
    "info": {
        "title": "Swagger Backend Problem - OpenAPI 3.0",
        "description": "Backend Problem",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "antonfley@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.11"
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        }
    ],
    "tags": [
        {
            "name": "sites",
            "description": "Everything about sites"
        },
        {
            "name": "configuration",
            "description": "Access to sites configuration"
        },
        {
            "name": "live",
            "description": "live data"
        }
    ],
    "paths": {
        "/api/v1/sites": {
            "get": {
                "tags": [
                    "sites"
                ],
                "summary": "receive all available sites.",
                "description": "receive all available sites.",
                "operationId": "getSites",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "site not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "sites"
                ],
                "summary": "Add a new site",
                "description": "Add a new site",
                "operationId": "addSite",
                "requestBody": {
                    "description": "Create a site",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/v1/sites/{id}": {
            "get": {
                "tags": [
                    "sites"
                ],
                "summary": "receive site by id.",
                "description": "receive site by id.",
                "operationId": "getSiteById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of site to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "site not found"
                    }
                }
            }
        },
        "/api/v1/sites/{id}/configuration": {
            "get": {
                "tags": [
                    "configuration"
                ],
                "summary": "receive config for site id",
                "description": "receive config for site id",
                "operationId": "getConfigById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of site",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "site not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "configuration"
                ],
                "summary": "create new config",
                "description": "create new config",
                "operationId": "createNewConfigBySiteId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of site",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "config data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/configuration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "put": {
                "tags": [
                    "configuration"
                ],
                "summary": "update site config",
                "description": "update site config",
                "operationId": "updateConfigBySiteId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of site",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "config data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/configuration"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pet"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/v1/sites/{id}/live": {
            "get": {
                "tags": [
                    "live"
                ],
                "summary": "receive all available live data",
                "description": "receive all available live data",
                "operationId": "getLiveDataBySiteId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of site",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "site not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "live"
                ],
                "summary": "push new data notification",
                "description": "push new data notification",
                "operationId": "liveDataCreate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of site",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "create a live notification",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/live"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/live"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/v1/sites/{id}/live/latest": {
            "get": {
                "tags": [
                    "live"
                ],
                "summary": "return latest live notification",
                "description": "return latest live notification",
                "operationId": "latestLiveNotification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of site",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/live"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Site": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Willo Woods"
                    },
                    "location": {
                        "type": "string",
                        "example": "north"
                    }
                }
            },
            "live": {
                "type": "object",
                "properties": {
                    "timeStamp": {
                        "type": "string",
                        "format": "timestamp"
                    },
                    "soc": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100
                    },
                    "load_kwh": {
                        "type": "number",
                        "minimum": 0
                    },
                    "net_load_kwh": {
                        "type": "number",
                        "minimum": 0
                    },
                    "pv_notification": {
                        "type": "boolean"
                    },
                    "bio_notification": {
                        "type": "boolean"
                    },
                    "cro_notification": {
                        "type": "boolean"
                    }
                }
            },
            "configuration": {
                "type": "object",
                "properties": {
                    "battery": {
                        "type": "object",
                        "properties": {
                            "vendor": {
                                "type": "string",
                                "enum": [
                                    "Tesla",
                                    "KATL"
                                ]
                            },
                            "capacity_kwh": {
                                "type": "number",
                                "minimum": 0
                            },
                            "max_power_kw": {
                                "type": "number",
                                "minimum": 0
                            }
                        }
                    },
                    "production": {
                        "type": "object",
                        "properties": {
                            "pv": {
                                "type": "object",
                                "properties": {
                                    "kwp": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "units": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                }
                            },
                            "bio": {
                                "type": "object",
                                "properties": {
                                    "units": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                }
                            },
                            "cro": {
                                "type": "object",
                                "properties": {
                                    "kwp": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "units": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "requestBodies": {
            "Sites": {
                "description": "Site object that needs to be added to the Sites",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Site"
                        }
                    }
                }
            }
        }
    }
}